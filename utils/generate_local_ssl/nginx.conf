events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name mlflow.lab *.lab lab;
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS server for mlflow.lab
    server {
        listen 443 ssl http2;
        server_name mlflow.lab;
        
        ssl_certificate /etc/nginx/ssl/certs/mlflow.lab-cert.pem;
        ssl_certificate_key /etc/nginx/ssl/certs/mlflow.lab-key.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA;
        ssl_prefer_server_ciphers on;
        
        root /usr/share/nginx/html;
        index index.html;
        
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        location /health {
            add_header Content-Type text/plain;
            return 200 'OK - MLflow HTTPS Test';
        }
    }
    
    # HTTPS server for *.lab wildcard
    server {
        listen 443 ssl http2;
        server_name *.lab lab;
        
        ssl_certificate /etc/nginx/ssl/certs/lab-cert.pem;
        ssl_certificate_key /etc/nginx/ssl/certs/lab-key.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA;
        ssl_prefer_server_ciphers on;
        
        root /usr/share/nginx/html;
        index index.html;
        
        location / {
            try_files $uri $uri/ /wildcard.html;
        }
        
        location /health {
            add_header Content-Type text/plain;
            return 200 'OK - Wildcard HTTPS Test';
        }
    }
}